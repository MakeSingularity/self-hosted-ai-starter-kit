{
  "id": "rKO0PUthz0jXtKhD",
  "name": "Oliver",
  "active": false,
  "createdAt": "2025-08-07T02:03:30.556Z",
  "updatedAt": "2025-08-10T13:05:34.000Z",
  "backup_timestamp": "2025-08-10T08:11:34.347736",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text }}",
        "options": {
          "systemMessage": "TOOLS\n---------\nAssistant can ask the user to use tools to look up information that may be helpful in answering the users original question. The tools the human can use are:\n\n{tools}\n\n{format_instructions}\n\nUSER'S INPUT\n--------------------\nHere is the user's input (remember to respond with a markdown code snippet of a json blob with a single action, and NOTHING else):\n\n{{input}}\n\nSYSTEM PROMPT\n----------------------\nYou are a helpful AI assistant named Oliver. You are chatting with the user named. `{{ $json.message.from.first_name }}`. Today is {{ DateTime.fromISO($now).toLocaleString(DateTime.DATETIME_FULL) }}\n\nFrom time to time call a user by name (if the user name is provided). In your reply, always send a message in Telegram-supported HTML format. Here are the following instructions:\n<b>bold</b>, <strong>bold</strong>\n<i>italic</i>, <em>italic</em>\n<u>underline</u>, <ins>underline</ins>\n<s>strikethrough</s>, <strike>strikethrough</strike>, <del>striketrough</del>\n<span class=\"tg-spoiler\">spoiler</span>, <tg-spoiler>spoiler</tg-spoiler>\n<b>bold <i>italic bold <s>italic bold striketrough <span class=\"tg-spoiler\">italic bold strikethrough spoiler</span></s> <u>underline italic bold</u></i> bold</b>\n<a href=\"http://www.example.com/\">inline URL</a>\n<code>inline fixed-width code</code>\n<pre>pre-formatted fixed -width code block</pre>\n2. Any code that you send should be wrapped in these tags: <pre><code class=\"language-python\">pre-formatted fixed-width code block written in the Python programming language</code></pre>\nOther programming languages are supported as well. \n3. All <, > and & symbols that are not a part of a tag or an HTML entity must be replaced with the corresponding HTML entities (< with &lt;, > with 4gt; and & with &amp;)\n4. If the user sends you a message starting with / sign, it means this it a Telegram bot command. For example, all users send /start command as their first message. Try to figure out what these commands mean and rply accordingly."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        736,
        -128
      ],
      "id": "ad879d62-f9c5-4fdc-8ec0-6ec4a2a69b2f",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": "llama3.1:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        352,
        192
      ],
      "id": "1a675b9b-1dc8-45eb-b263-6b15e628b21f",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "0qHm0xDUjhVUNjkF",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $execution.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        656,
        256
      ],
      "id": "cf2b495f-f741-4f60-9f4c-5f874e4bb440",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "KQ9ZVAiIXsIsOUpA",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        336,
        -80
      ],
      "id": "2b7edf59-cfeb-4634-ac21-b82a4c488147",
      "name": "Telegram Trigger",
      "webhookId": "f35e769a-acca-42c4-89e0-e8f8acc43bea",
      "credentials": {
        "telegramApi": {
          "id": "VaOPcW3yM4ybDnyz",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1088,
        -128
      ],
      "id": "2edd723e-f04d-451c-b71f-46b39a5e5dfe",
      "name": "Send a text message",
      "webhookId": "e8cb59ff-08cd-4076-8ef1-e22907f0813b",
      "credentials": {
        "telegramApi": {
          "id": "VaOPcW3yM4ybDnyz",
          "name": "Telegram account"
        }
      }
    }
  ],
  "connections": {
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": []
}